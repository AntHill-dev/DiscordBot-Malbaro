from typing import Any

import discord


class PrivateVoiceControllerRenameModal(discord.ui.Modal):
    def __init__(self, listener_cog: Any) -> None:
        input_text = discord.ui.InputText(
            placeholder="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
            label="–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
        )
        super().__init__(input_text, title="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")

        self.listener_cog = listener_cog

    async def callback(self, interaction: discord.Interaction) -> None:
        user = interaction.user._user
        if user.name not in self.listener_cog._private_channels:
            await interaction.response.send_message("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        voice_channel = await self.listener_cog.get_voice_channel_by_id(self.listener_cog._private_channels[user.name])
        self.listener_cog._private_channels[user.name] = (await voice_channel.edit(name=self.children[0].value)).id
        await interaction.response.send_message("–õ–∏—á–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω!", ephemeral=True)


class PrivateVoiceControllerLimitModal(discord.ui.Modal):
    def __init__(self, listener_cog: Any) -> None:
        input_text = discord.ui.InputText(
            placeholder="–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
            label="–ù–æ–≤–æ–µ –∫–æ–ª-–≤–æ —Å–ª–æ—Ç–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
            style=discord.InputTextStyle.long,
        )
        super().__init__(input_text, title="–ö–æ–ª-–≤–æ —Å–ª–æ—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")

        self.listener_cog = listener_cog

    async def callback(self, interaction: discord.Interaction) -> None:
        user = interaction.user._user
        if user.name not in self.listener_cog._private_channels:
            await interaction.response.send_message("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        voice_channel = await self.listener_cog.get_voice_channel_by_id(self.listener_cog._private_channels[user.name])
        self.listener_cog._private_channels[user.name] = (await voice_channel.edit(
            user_limit=int(self.children[0].value),
        )).id
        await interaction.response.send_message("–ö–æ–ª-–≤–æ —Å–ª–æ—Ç–æ–≤ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!", ephemeral=True)


class PrivateVoiceControllerView(discord.ui.View):
    """Private voice controller view."""

    def __init__(self, listener_cog: Any) -> None:
        super().__init__(timeout=None)
        self.listener_cog = listener_cog

    @discord.ui.button(custom_id="private-voice:limit-add", style=discord.ButtonStyle.primary, row=1, emoji="‚ûï")
    async def add_slot_to_limit(self, button, interaction) -> None:
        user = interaction.user._user

        if user.name not in self.listener_cog._private_channels:
            await interaction.response.send_message("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)

        voice_channel = await self.listener_cog.get_voice_channel_by_id(self.listener_cog._private_channels[user.name])
        self.listener_cog._private_channels[user.name] = (await voice_channel.edit(user_limit=voice_channel.user_limit + 1)).id
        await interaction.response.send_message("–û–¥–∏–Ω —Å–ª–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", ephemeral=True)

    @discord.ui.button(custom_id="private-voice:limit-remove", style=discord.ButtonStyle.primary, row=1, emoji="‚ûñ")
    async def remove_slot_in_limit(self, button, interaction) -> None:
        user = interaction.user._user

        if user.name not in self.listener_cog._private_channels:
            await interaction.response.send_message("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        voice_channel = await self.listener_cog.get_voice_channel_by_id(self.listener_cog._private_channels[user.name])
        new_limit = voice_channel.user_limit - 1
        if new_limit < 1:
            await interaction.response.send_message(
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!",
                ephemeral=True,
            )
            return

        self.listener_cog._private_channels[user.name] = (await voice_channel.edit(user_limit=new_limit)).id
        await interaction.response.send_message("–û–¥–∏–Ω —Å–ª–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!", ephemeral=True)

    @discord.ui.button(custom_id="private-voice:open", style=discord.ButtonStyle.primary, row=2, emoji="üîê")
    async def open(self, button, interaction) -> None:
        user = interaction.user._user

        if user.name not in self.listener_cog._private_channels:
            await interaction.response.send_message("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        voice_channel: discord.VoiceChannel = await self.listener_cog.get_voice_channel_by_id(self.listener_cog._private_channels[user.name])

        self.listener_cog._private_channels[user.name] = (await voice_channel.edit(
            overwrites={
                role: discord.PermissionOverwrite(connect=True)
                for role in voice_channel.guild.roles
            },
        )).id

        await interaction.response.send_message(
            "–î–æ—Å—Ç—É–ø –≤ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç!",
            ephemeral=True,
        )

    @discord.ui.button(custom_id="private-voice:close", style=discord.ButtonStyle.primary, row=2, emoji="üîí")
    async def close(self, button, interaction) -> None:
        user = interaction.user._user

        if user.name not in self.listener_cog._private_channels:
            await interaction.response.send_message("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        voice_channel = await self.listener_cog.get_voice_channel_by_id(self.listener_cog._private_channels[user.name])
        self.listener_cog._private_channels[user.name] = (await voice_channel.edit(
            overwrites={
                role: discord.PermissionOverwrite(connect=False)
                for role in voice_channel.guild.roles
            },
        )).id

        await interaction.response.send_message("–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç!", ephemeral=True)

    @discord.ui.button(label="–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", custom_id="private-voice:rename", style=discord.ButtonStyle.primary, row=3)
    async def rename(self, button, interaction: discord.Interaction) -> None:
        user = interaction.user._user

        if user.name not in self.listener_cog._private_channels:
            await interaction.response.send_message("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        await interaction.response.send_modal(PrivateVoiceControllerRenameModal(self.listener_cog))

    @discord.ui.button(label="–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª-–≤–æ —Å–ª–æ—Ç–æ–≤", custom_id="private-voice:limit", style=discord.ButtonStyle.primary, row=3)
    async def limit(self, button, interaction: discord.Interaction) -> None:
        user = interaction.user._user

        if user.name not in self.listener_cog._private_channels:
            await interaction.response.send_message("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ª–∏—á–Ω–æ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        await interaction.response.send_modal(PrivateVoiceControllerLimitModal(self.listener_cog))
